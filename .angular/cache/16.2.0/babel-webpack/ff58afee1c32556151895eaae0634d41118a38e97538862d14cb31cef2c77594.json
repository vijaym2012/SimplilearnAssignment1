{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class EditClientComponent {}\n_class = EditClientComponent;\n_class.ɵfac = function EditClientComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-edit-client\"]],\n  decls: 2,\n  vars: 0,\n  template: function EditClientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"edit-client works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport class EditProductComponent {\n  constructor(http, route, router) {\n    this.http = http;\n    this.route = route;\n    this.router = router;\n    this.id = 0;\n    this.name = '';\n    this.orderdate = '';\n    this.ordertime = '';\n    this.message = '';\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const idParam = params.get('id');\n      if (idParam !== null) {\n        this.id = +idParam;\n        this.fetchProduct();\n      } else {\n        console.error(\"id is missing  or null\");\n      }\n    });\n  }\n  fetchProduct() {\n    this.http.get('http://localhost:3000/getProduct/' + this.id).subscribe(response => {\n      const product = response[0];\n      this.name = product.name;\n      this.orderdate = product.orderdate;\n      console.log(this.orderdate);\n      this.ordertime = product.ordertime;\n    }, error => {\n      console.error('Error fetching the product', error);\n    });\n  }\n  updateProduct() {\n    const product = {\n      id: this.id,\n      name: this.name,\n      orderdate: this.orderdate,\n      ordertime: this.ordertime\n    };\n    this.http.put('http://localhost:3000/updateProduct', product).subscribe(response => {\n      this.message = response.message;\n      this.router.navigate(['/view']);\n    }, error => {\n      console.error('Error updating the product', error);\n    });\n  }\n}","map":{"version":3,"names":["EditClientComponent","selectors","decls","vars","template","EditClientComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","EditProductComponent","constructor","http","route","router","id","name","orderdate","ordertime","message","ngOnInit","paramMap","subscribe","params","idParam","get","fetchProduct","console","error","response","product","log","updateProduct","put","navigate"],"sources":["/Users/vijaymahar/Documents/Caltec/angular/client/src/app/edit-client/edit-client.component.ts","/Users/vijaymahar/Documents/Caltec/angular/client/src/app/edit-client/edit-client.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.css']\n})\nexport class EditClientComponent {\n\n}\n\n\n\n})\nexport class EditProductComponent implements OnInit {\n  id:number=0;\n  name:string='';\n  orderdate:string='';\n  ordertime:string='';\n  message:string='';\n  constructor(private http:HttpClient,private route:ActivatedRoute,private router:Router) { }\n\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params=>{\n      const idParam=params.get('id');\n      if(idParam!==null){\n        this.id=+idParam;\n        this.fetchProduct();\n      }\n      else{\n        console.error(\"id is missing  or null\");\n      }\n\n\n    })\n  }\n\n\nfetchProduct(){\n  this.http.get('http://localhost:3000/getProduct/'+this.id)\n      .subscribe((response:any)=>\n    {\n      const product=response[0];\n      this.name=product.name;\n      this.orderdate=product.orderdate;\n      console.log(this.orderdate)\n      this.ordertime=product.ordertime;\n    },\n    (error)=>{console.error('Error fetching the product',error);}\n  );\n}\n\n\n  updateProduct(){\n    const product={\n      id:this.id,\n      name:this.name,\n      orderdate:this.orderdate,\n      ordertime:this.ordertime\n    };\n\n\n    this.http.put('http://localhost:3000/updateProduct',product)\n    .subscribe((response:any)=>\n    {this.message=response.message;this.router.navigate(['/view'])},\n    (error)=>{console.error('Error updating the product',error);}\n  );\n\n\n  }\n\n\n}\n","<p>edit-client works!</p>\n"],"mappings":";;AASA,OAAM,MAAOA,mBAAmB;SAAnBA,mBAAmB;;mBAAnBA,MAAmB;AAAA;;QAAnBA,MAAmB;EAAAC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCThCE,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,yBAAkB;MAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;ADgBzB,OAAM,MAAOC,oBAAoB;EAM/BC,YAAoBC,IAAe,EAASC,KAAoB,EAASC,MAAa;IAAlE,KAAAF,IAAI,GAAJA,IAAI;IAAoB,KAAAC,KAAK,GAALA,KAAK;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAL/E,KAAAC,EAAE,GAAQ,CAAC;IACX,KAAAC,IAAI,GAAQ,EAAE;IACd,KAAAC,SAAS,GAAQ,EAAE;IACnB,KAAAC,SAAS,GAAQ,EAAE;IACnB,KAAAC,OAAO,GAAQ,EAAE;EACyE;EAG1FC,QAAQA,CAAA;IACN,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAE;MACpC,MAAMC,OAAO,GAACD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC;MAC9B,IAAGD,OAAO,KAAG,IAAI,EAAC;QAChB,IAAI,CAACT,EAAE,GAAC,CAACS,OAAO;QAChB,IAAI,CAACE,YAAY,EAAE;OACpB,MACG;QACFC,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;;IAI3C,CAAC,CAAC;EACJ;EAGFF,YAAYA,CAAA;IACV,IAAI,CAACd,IAAI,CAACa,GAAG,CAAC,mCAAmC,GAAC,IAAI,CAACV,EAAE,CAAC,CACrDO,SAAS,CAAEO,QAAY,IAAG;MAE3B,MAAMC,OAAO,GAACD,QAAQ,CAAC,CAAC,CAAC;MACzB,IAAI,CAACb,IAAI,GAACc,OAAO,CAACd,IAAI;MACtB,IAAI,CAACC,SAAS,GAACa,OAAO,CAACb,SAAS;MAChCU,OAAO,CAACI,GAAG,CAAC,IAAI,CAACd,SAAS,CAAC;MAC3B,IAAI,CAACC,SAAS,GAACY,OAAO,CAACZ,SAAS;IAClC,CAAC,EACAU,KAAK,IAAG;MAACD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAACA,KAAK,CAAC;IAAC,CAAC,CAC9D;EACH;EAGEI,aAAaA,CAAA;IACX,MAAMF,OAAO,GAAC;MACZf,EAAE,EAAC,IAAI,CAACA,EAAE;MACVC,IAAI,EAAC,IAAI,CAACA,IAAI;MACdC,SAAS,EAAC,IAAI,CAACA,SAAS;MACxBC,SAAS,EAAC,IAAI,CAACA;KAChB;IAGD,IAAI,CAACN,IAAI,CAACqB,GAAG,CAAC,qCAAqC,EAACH,OAAO,CAAC,CAC3DR,SAAS,CAAEO,QAAY,IAAG;MAC1B,IAAI,CAACV,OAAO,GAACU,QAAQ,CAACV,OAAO;MAAC,IAAI,CAACL,MAAM,CAACoB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAAA,CAAC,EAC9DN,KAAK,IAAG;MAACD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAACA,KAAK,CAAC;IAAC,CAAC,CAC9D;EAGD"},"metadata":{},"sourceType":"module","externalDependencies":[]}